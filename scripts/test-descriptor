#!/usr/bin/env python

import json
import signal
import sys
from dockerworker.worker import new_client
from multiprocessing import Queue
from time import time

from dockerworker.worker.wonderland_pb2 import Job, RequestWithId
from google.protobuf.json_format import Parse
from lockfile import LockFile

from dockerworker.config import config
from dockerworker.worker import do_docker_job


def break_lock():
    try:
        LockFile(config.LOCK_FILE).break_lock()
    except:
        pass


def sigquit_handler(n, f):
    # kill_all_containers()
    break_lock()
    sys.exit(0)


def main():
    break_lock()
    signal.signal(signal.SIGQUIT, sigquit_handler)
    assert len(sys.argv) == 2, "input file is needed"

    job = Job()
    job.kind = "docker-test"
    with open("descriptor.json") as f:
        job_data = json.load(f)
    job.input = json.dumps(job_data)

    config = {"connect_to": "130.193.59.210:8090",
              "local_project_root": "~/repo-storage/test",
              "user": "imusinov",
              "azurefs_acc_name": "mylake",
              "azurefs_acc_key": "bMFX3wGXcp3eZCbxy9v0W0iUBco6gkF+j2EcZj8XKXndsLGZZ568ptKZQU0lCR4Sr5YmbqvME6Z7QQZgu9GUVQ==",
              "azurefs_share": "lake-share",
              "client_cert": "~/.wonder/credentials/imusinov.crt",
              "client_key": "~/.wonder/credentials/imusinov.key",
              "ca_cert": "~/.wonder/credentials/wonderland.crt",
              "max_msg_size_megabytes": 515,
              }
    stub = new_client(config=config)
    job = stub.CreateJob(job)
    # queue = Queue()
    # do_docker_job(job, queue)
    # Parse(queue.get(), job)
    stub.GetJob(RequestWithId(id=job.id))
    print(job)


if __name__ == '__main__':
    main()
